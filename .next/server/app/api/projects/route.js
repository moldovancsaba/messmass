/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/projects/route";
exports.ids = ["app/api/projects/route"];
exports.modules = {

/***/ "(rsc)/./app/api/projects/route.ts":
/*!***********************************!*\
  !*** ./app/api/projects/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_slugUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/slugUtils */ \"(rsc)/./lib/slugUtils.ts\");\n\n\n\n// Hashtag cleanup utility function\nasync function cleanupUnusedHashtags(db) {\n    try {\n        console.log('üßπ Starting hashtag cleanup...');\n        const projectsCollection = db.collection('projects');\n        const hashtagsCollection = db.collection('hashtags');\n        // Get all hashtags currently used in projects\n        const projects = await projectsCollection.find({}).toArray();\n        const usedHashtags = new Set();\n        projects.forEach((project)=>{\n            if (project.hashtags && Array.isArray(project.hashtags)) {\n                project.hashtags.forEach((hashtag)=>{\n                    usedHashtags.add(hashtag.toLowerCase());\n                });\n            }\n        });\n        // Delete hashtags that are no longer used\n        const deleteResult = await hashtagsCollection.deleteMany({\n            hashtag: {\n                $not: {\n                    $in: Array.from(usedHashtags)\n                }\n            }\n        });\n        console.log(`‚úÖ Cleaned up ${deleteResult.deletedCount} unused hashtags`);\n        return deleteResult.deletedCount;\n    } catch (error) {\n        console.error('‚ùå Failed to cleanup hashtags:', error);\n        return 0;\n    }\n}\nconst MONGODB_URI = process.env.MONGODB_URI || '';\nconst MONGODB_DB = process.env.MONGODB_DB || 'messmass';\nlet cachedClient = null;\nasync function connectToDatabase() {\n    if (cachedClient) {\n        return cachedClient;\n    }\n    if (!MONGODB_URI) {\n        throw new Error('MONGODB_URI environment variable is not set');\n    }\n    try {\n        console.log('üîó Connecting to MongoDB Atlas...');\n        const client = new mongodb__WEBPACK_IMPORTED_MODULE_1__.MongoClient(MONGODB_URI);\n        await client.connect();\n        // Test the connection\n        await client.db(MONGODB_DB).admin().ping();\n        console.log('‚úÖ MongoDB Atlas connected successfully');\n        cachedClient = client;\n        return client;\n    } catch (error) {\n        console.error('‚ùå Failed to connect to MongoDB Atlas:', error);\n        throw error;\n    }\n}\n// GET /api/projects - Fetch all projects\nasync function GET() {\n    try {\n        console.log('üìä Fetching projects from database...');\n        const client = await connectToDatabase();\n        const db = client.db(MONGODB_DB);\n        const collection = db.collection('projects');\n        // Get collection stats for debugging\n        const stats = await collection.estimatedDocumentCount();\n        console.log(`üìà Collection has ${stats} documents`);\n        const projects = await collection.find({}).sort({\n            updatedAt: -1\n        }).toArray();\n        console.log(`‚úÖ Found ${projects.length} projects`);\n        const formattedProjects = projects.map((project)=>({\n                _id: project._id.toString(),\n                eventName: project.eventName,\n                eventDate: project.eventDate,\n                hashtags: project.hashtags || [],\n                stats: project.stats,\n                viewSlug: project.viewSlug,\n                editSlug: project.editSlug,\n                createdAt: project.createdAt,\n                updatedAt: project.updatedAt\n            }));\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            projects: formattedProjects,\n            debug: {\n                databaseName: MONGODB_DB,\n                collectionCount: stats,\n                projectsFound: projects.length\n            }\n        });\n    } catch (error) {\n        console.error('‚ùå Failed to fetch projects:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Failed to fetch projects',\n            debug: {\n                databaseName: MONGODB_DB,\n                mongoUri: MONGODB_URI ? 'Set' : 'Not set',\n                errorType: error instanceof Error ? error.constructor.name : 'Unknown'\n            }\n        }, {\n            status: 500\n        });\n    }\n}\n// POST /api/projects - Create new project\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { eventName, eventDate, hashtags = [], stats } = body;\n        if (!eventName || !eventDate || !stats) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Missing required fields'\n            }, {\n                status: 400\n            });\n        }\n        console.log('üíæ Creating new project:', eventName);\n        // Generate unique slugs for the project\n        console.log('üîë Generating unique slugs...');\n        const { viewSlug, editSlug } = await (0,_lib_slugUtils__WEBPACK_IMPORTED_MODULE_2__.generateProjectSlugs)();\n        console.log('‚úÖ Generated slugs:', {\n            viewSlug: viewSlug.substring(0, 8) + '...',\n            editSlug: editSlug.substring(0, 8) + '...'\n        });\n        const client = await connectToDatabase();\n        const db = client.db(MONGODB_DB);\n        const collection = db.collection('projects');\n        const now = new Date().toISOString();\n        const project = {\n            eventName,\n            eventDate,\n            hashtags: hashtags || [],\n            stats,\n            viewSlug,\n            editSlug,\n            createdAt: now,\n            updatedAt: now\n        };\n        // Add hashtags to the hashtags collection if they don't exist\n        if (hashtags && hashtags.length > 0) {\n            const hashtagsCollection = db.collection('hashtags');\n            // Process each hashtag individually to avoid conflicts\n            for (const hashtag of hashtags){\n                const normalizedHashtag = hashtag.toLowerCase();\n                // First try to increment existing hashtag\n                const updateResult = await hashtagsCollection.updateOne({\n                    hashtag: normalizedHashtag\n                }, {\n                    $inc: {\n                        count: 1\n                    }\n                });\n                // If no document was updated, create new hashtag\n                if (updateResult.matchedCount === 0) {\n                    await hashtagsCollection.updateOne({\n                        hashtag: normalizedHashtag\n                    }, {\n                        $setOnInsert: {\n                            hashtag: normalizedHashtag,\n                            count: 1,\n                            createdAt: now\n                        }\n                    }, {\n                        upsert: true\n                    });\n                }\n            }\n            console.log(`‚úÖ Updated hashtag counts for ${hashtags.length} hashtags`);\n        }\n        const result = await collection.insertOne(project);\n        console.log('‚úÖ Project created with ID:', result.insertedId);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            projectId: result.insertedId.toString(),\n            project: {\n                _id: result.insertedId.toString(),\n                ...project\n            }\n        });\n    } catch (error) {\n        console.error('‚ùå Failed to create project:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Failed to create project'\n        }, {\n            status: 500\n        });\n    }\n}\n// PUT /api/projects - Update existing project\nasync function PUT(request) {\n    try {\n        const body = await request.json();\n        const { projectId, eventName, eventDate, hashtags = [], stats } = body;\n        if (!projectId || !mongodb__WEBPACK_IMPORTED_MODULE_1__.ObjectId.isValid(projectId)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Invalid project ID'\n            }, {\n                status: 400\n            });\n        }\n        console.log('üîÑ Updating project:', projectId);\n        const client = await connectToDatabase();\n        const db = client.db(MONGODB_DB);\n        const collection = db.collection('projects');\n        // Get the current project to compare hashtags\n        const currentProject = await collection.findOne({\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_1__.ObjectId(projectId)\n        });\n        if (!currentProject) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Project not found'\n            }, {\n                status: 404\n            });\n        }\n        const updateData = {\n            eventName,\n            eventDate,\n            hashtags: hashtags || [],\n            stats,\n            updatedAt: new Date().toISOString()\n        };\n        // Handle hashtag changes\n        const currentHashtags = (currentProject.hashtags || []).map((h)=>h.toLowerCase());\n        const newHashtags = (hashtags || []).map((h)=>h.toLowerCase());\n        const hashtagsCollection = db.collection('hashtags');\n        const now = new Date().toISOString();\n        // Hashtags to add (in new but not in current)\n        const hashtagsToAdd = newHashtags.filter((h)=>!currentHashtags.includes(h));\n        // Hashtags to remove (in current but not in new)\n        const hashtagsToRemove = currentHashtags.filter((h)=>!newHashtags.includes(h));\n        // Update hashtag counts\n        if (hashtagsToAdd.length > 0) {\n            // Process each hashtag individually to avoid conflicts\n            for (const hashtag of hashtagsToAdd){\n                // First try to increment existing hashtag\n                const updateResult = await hashtagsCollection.updateOne({\n                    hashtag\n                }, {\n                    $inc: {\n                        count: 1\n                    }\n                });\n                // If no document was updated, create new hashtag\n                if (updateResult.matchedCount === 0) {\n                    await hashtagsCollection.updateOne({\n                        hashtag\n                    }, {\n                        $setOnInsert: {\n                            hashtag,\n                            count: 1,\n                            createdAt: now\n                        }\n                    }, {\n                        upsert: true\n                    });\n                }\n            }\n            console.log(`‚úÖ Added ${hashtagsToAdd.length} new hashtags`);\n        }\n        if (hashtagsToRemove.length > 0) {\n            // Decrement count for removed hashtags\n            for (const hashtag of hashtagsToRemove){\n                await hashtagsCollection.updateOne({\n                    hashtag\n                }, {\n                    $inc: {\n                        count: -1\n                    }\n                });\n            }\n            console.log(`‚úÖ Decremented count for ${hashtagsToRemove.length} hashtags`);\n        }\n        const result = await collection.updateOne({\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_1__.ObjectId(projectId)\n        }, {\n            $set: updateData\n        });\n        console.log('‚úÖ Project updated successfully');\n        // Clean up unused hashtags\n        await cleanupUnusedHashtags(db);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            modified: result.modifiedCount > 0\n        });\n    } catch (error) {\n        console.error('‚ùå Failed to update project:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Failed to update project'\n        }, {\n            status: 500\n        });\n    }\n}\n// DELETE /api/projects - Delete project\nasync function DELETE(request) {\n    try {\n        const url = new URL(request.url);\n        const projectId = url.searchParams.get('projectId');\n        if (!projectId || !mongodb__WEBPACK_IMPORTED_MODULE_1__.ObjectId.isValid(projectId)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Invalid project ID'\n            }, {\n                status: 400\n            });\n        }\n        console.log('üóëÔ∏è Deleting project:', projectId);\n        const client = await connectToDatabase();\n        const db = client.db(MONGODB_DB);\n        const collection = db.collection('projects');\n        // Get the project's hashtags before deletion\n        const project = await collection.findOne({\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_1__.ObjectId(projectId)\n        });\n        if (!project) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Project not found'\n            }, {\n                status: 404\n            });\n        }\n        // Delete the project\n        const result = await collection.deleteOne({\n            _id: new mongodb__WEBPACK_IMPORTED_MODULE_1__.ObjectId(projectId)\n        });\n        console.log('‚úÖ Project deleted successfully');\n        // Decrement hashtag counts and clean up unused hashtags\n        if (project.hashtags && project.hashtags.length > 0) {\n            const hashtagsCollection = db.collection('hashtags');\n            // Decrement count for each hashtag\n            for (const hashtag of project.hashtags){\n                await hashtagsCollection.updateOne({\n                    hashtag: hashtag.toLowerCase()\n                }, {\n                    $inc: {\n                        count: -1\n                    }\n                });\n            }\n            console.log(`‚úÖ Decremented count for ${project.hashtags.length} hashtags`);\n            // Clean up unused hashtags\n            await cleanupUnusedHashtags(db);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true\n        });\n    } catch (error) {\n        console.error('‚ùå Failed to delete project:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Failed to delete project'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/projects/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/slugUtils.ts":
/*!**************************!*\
  !*** ./lib/slugUtils.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   findProjectByEditSlug: () => (/* binding */ findProjectByEditSlug),\n/* harmony export */   findProjectByViewSlug: () => (/* binding */ findProjectByViewSlug),\n/* harmony export */   generateProjectSlugs: () => (/* binding */ generateProjectSlugs),\n/* harmony export */   generateUniqueEditSlug: () => (/* binding */ generateUniqueEditSlug),\n/* harmony export */   generateUniqueViewSlug: () => (/* binding */ generateUniqueViewSlug)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm/v4.js\");\n\n\nconst MONGODB_URI = process.env.MONGODB_URI || '';\nconst MONGODB_DB = process.env.MONGODB_DB || 'messmass';\nlet cachedClient = null;\nasync function connectToDatabase() {\n    if (cachedClient) {\n        return cachedClient;\n    }\n    if (!MONGODB_URI) {\n        throw new Error('MONGODB_URI environment variable is not set');\n    }\n    try {\n        const client = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(MONGODB_URI);\n        await client.connect();\n        await client.db(MONGODB_DB).admin().ping();\n        cachedClient = client;\n        return client;\n    } catch (error) {\n        console.error('‚ùå Failed to connect to MongoDB Atlas:', error);\n        throw error;\n    }\n}\n/**\n * Generate a unique UUID-based slug\n */ function generateSlug() {\n    return (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n}\n/**\n * Check if a slug already exists in the database\n */ async function isSlugUnique(slug) {\n    try {\n        const client = await connectToDatabase();\n        const db = client.db(MONGODB_DB);\n        const collection = db.collection('projects');\n        const existingProject = await collection.findOne({\n            $or: [\n                {\n                    viewSlug: slug\n                },\n                {\n                    editSlug: slug\n                }\n            ]\n        });\n        return existingProject === null;\n    } catch (error) {\n        console.error('Error checking slug uniqueness:', error);\n        return false;\n    }\n}\n/**\n * Generate a unique view slug for client read-only access\n */ async function generateUniqueViewSlug() {\n    let slug = generateSlug();\n    let isUnique = await isSlugUnique(slug);\n    // Regenerate if not unique (very unlikely with UUIDs)\n    while(!isUnique){\n        slug = generateSlug();\n        isUnique = await isSlugUnique(slug);\n    }\n    return slug;\n}\n/**\n * Generate a unique edit slug for editor access\n */ async function generateUniqueEditSlug() {\n    let slug = generateSlug();\n    let isUnique = await isSlugUnique(slug);\n    // Regenerate if not unique (very unlikely with UUIDs)\n    while(!isUnique){\n        slug = generateSlug();\n        isUnique = await isSlugUnique(slug);\n    }\n    return slug;\n}\n/**\n * Generate both view and edit slugs for a new project\n */ async function generateProjectSlugs() {\n    const [viewSlug, editSlug] = await Promise.all([\n        generateUniqueViewSlug(),\n        generateUniqueEditSlug()\n    ]);\n    return {\n        viewSlug,\n        editSlug\n    };\n}\n/**\n * Find a project by its view slug\n */ async function findProjectByViewSlug(viewSlug) {\n    try {\n        const client = await connectToDatabase();\n        const db = client.db(MONGODB_DB);\n        const collection = db.collection('projects');\n        const project = await collection.findOne({\n            viewSlug\n        });\n        if (project) {\n            return {\n                ...project,\n                _id: project._id.toString()\n            };\n        }\n        return null;\n    } catch (error) {\n        console.error('Error finding project by view slug:', error);\n        throw error;\n    }\n}\n/**\n * Find a project by its edit slug\n */ async function findProjectByEditSlug(editSlug) {\n    try {\n        const client = await connectToDatabase();\n        const db = client.db(MONGODB_DB);\n        const collection = db.collection('projects');\n        const project = await collection.findOne({\n            editSlug\n        });\n        if (project) {\n            return {\n                ...project,\n                _id: project._id.toString()\n            };\n        }\n        return null;\n    } catch (error) {\n        console.error('Error finding project by edit slug:', error);\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/slugUtils.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fprojects%2Froute&page=%2Fapi%2Fprojects%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2Froute.ts&appDir=%2FUsers%2Fmoldovan%2FLibrary%2FMobile%20Documents%2Fcom~apple~CloudDocs%2FProjects%2Fmessmass%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmoldovan%2FLibrary%2FMobile%20Documents%2Fcom~apple~CloudDocs%2FProjects%2Fmessmass&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fprojects%2Froute&page=%2Fapi%2Fprojects%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2Froute.ts&appDir=%2FUsers%2Fmoldovan%2FLibrary%2FMobile%20Documents%2Fcom~apple~CloudDocs%2FProjects%2Fmessmass%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmoldovan%2FLibrary%2FMobile%20Documents%2Fcom~apple~CloudDocs%2FProjects%2Fmessmass&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_moldovan_Library_Mobile_Documents_com_apple_CloudDocs_Projects_messmass_app_api_projects_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/projects/route.ts */ \"(rsc)/./app/api/projects/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/projects/route\",\n        pathname: \"/api/projects\",\n        filename: \"route\",\n        bundlePath: \"app/api/projects/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"/Users/moldovan/Library/Mobile Documents/com~apple~CloudDocs/Projects/messmass/app/api/projects/route.ts\",\n    nextConfigOutput,\n    userland: _Users_moldovan_Library_Mobile_Documents_com_apple_CloudDocs_Projects_messmass_app_api_projects_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/projects/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fprojects%2Froute&page=%2Fapi%2Fprojects%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2Froute.ts&appDir=%2FUsers%2Fmoldovan%2FLibrary%2FMobile%20Documents%2Fcom~apple~CloudDocs%2FProjects%2Fmessmass%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmoldovan%2FLibrary%2FMobile%20Documents%2Fcom~apple~CloudDocs%2FProjects%2Fmessmass&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("mongodb");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/uuid"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fprojects%2Froute&page=%2Fapi%2Fprojects%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2Froute.ts&appDir=%2FUsers%2Fmoldovan%2FLibrary%2FMobile%20Documents%2Fcom~apple~CloudDocs%2FProjects%2Fmessmass%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmoldovan%2FLibrary%2FMobile%20Documents%2Fcom~apple~CloudDocs%2FProjects%2Fmessmass&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();