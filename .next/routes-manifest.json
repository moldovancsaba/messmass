{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    },
    {
      "source": "/hashtag/:hashtag*",
      "destination": "/filter/:hashtag",
      "statusCode": 308,
      "regex": "^(?!/_next)/hashtag(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/admin/local-users/[id]",
      "regex": "^/api/admin/local\\-users/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/admin/local\\-users/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/admin/projects/[id]",
      "regex": "^/api/admin/projects/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/admin/projects/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/hashtags/filter-by-slug/[slug]",
      "regex": "^/api/hashtags/filter\\-by\\-slug/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/api/hashtags/filter\\-by\\-slug/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/hashtags/[hashtag]",
      "regex": "^/api/hashtags/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPhashtag": "nxtPhashtag"
      },
      "namedRegex": "^/api/hashtags/(?<nxtPhashtag>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/projects/edit/[slug]",
      "regex": "^/api/projects/edit/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/api/projects/edit/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/projects/stats/[slug]",
      "regex": "^/api/projects/stats/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/api/projects/stats/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/projects/[id]",
      "regex": "^/api/projects/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/projects/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/edit/[slug]",
      "regex": "^/edit/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/edit/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/filter/[slug]",
      "regex": "^/filter/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/filter/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/hashtag/[hashtag]",
      "regex": "^/hashtag/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPhashtag": "nxtPhashtag"
      },
      "namedRegex": "^/hashtag/(?<nxtPhashtag>[^/]+?)(?:/)?$"
    },
    {
      "page": "/stats/[slug]",
      "regex": "^/stats/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/stats/(?<nxtPslug>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/admin/categories",
      "regex": "^/admin/categories(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/categories(?:/)?$"
    },
    {
      "page": "/admin/charts",
      "regex": "^/admin/charts(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/charts(?:/)?$"
    },
    {
      "page": "/admin/dashboard",
      "regex": "^/admin/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/dashboard(?:/)?$"
    },
    {
      "page": "/admin/design",
      "regex": "^/admin/design(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/design(?:/)?$"
    },
    {
      "page": "/admin/filter",
      "regex": "^/admin/filter(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/filter(?:/)?$"
    },
    {
      "page": "/admin/hashtags",
      "regex": "^/admin/hashtags(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/hashtags(?:/)?$"
    },
    {
      "page": "/admin/login",
      "regex": "^/admin/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/login(?:/)?$"
    },
    {
      "page": "/admin/projects",
      "regex": "^/admin/projects(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/projects(?:/)?$"
    },
    {
      "page": "/admin/users",
      "regex": "^/admin/users(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/users(?:/)?$"
    },
    {
      "page": "/admin/variables",
      "regex": "^/admin/variables(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/variables(?:/)?$"
    },
    {
      "page": "/admin/visualization",
      "regex": "^/admin/visualization(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/visualization(?:/)?$"
    },
    {
      "page": "/debug/hashtag-categories",
      "regex": "^/debug/hashtag\\-categories(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/debug/hashtag\\-categories(?:/)?$"
    },
    {
      "page": "/icon.png",
      "regex": "^/icon\\.png(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/icon\\.png(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}